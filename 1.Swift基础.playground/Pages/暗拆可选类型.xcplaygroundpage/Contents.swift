//: 暗拆可选类型: 有时候可以明确地知道可选变量是有值的,声明时直接变量类型后加感叹号
//: - ✅可选变量一开始就已经给了值,且此后的使用假定一直有值.

//: 比较
//: - 常规可选类型
var 可能的身份证号1:String?
print(可能的身份证号1)

//: - 暗拆可选类型
let 假定有值的身份证号1:String! = "2102199502132560"
print(假定有值的身份证号1)
假定有值的身份证号1!

//: 如果暗拆可选类型没有值,也就是nil,加!一样会运行时错误
var 假定有值的身份证号2:String!

//这句会出现错误
假定有值的身份证号2!

//: 暗拆可选类型同样可以使用有值判断和有值绑定
//: ⚠️如果没法确保一个变量一直有值,就不要使用暗拆可选类型.否则总是使用常规可选类型.

//: [下一节:断言](@next)
